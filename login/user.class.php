<?phpinclude_once(LOGIN_MODUL . "/free.class.php");include_once(DBUNIT_MODUL . "/table.class.php");class user extends dbtabl // класс пользователя{	var $allfrees; // Объект клааса прав	var $log;	var $pass;	var $userid;	var $usernic; // Имя пользователя для отображения	var $userstat; // Статус пользователя (например - не утвержден)	// технические переменные	var $querystring_id; // Строчка с нужным пользователем	var $erruser; // ошибка авторизации	var $unit;	var $parts; // объект разделов	function __construct($db)	{		parent::__construct($db);		$this->set_tabname(LOGINTAB);		$this->add_field(logtab_log, "CHAR( 50 )");		$this->add_field(logtab_pass, "CHAR( 255 )");		$this->add_field(logtab_nic, "CHAR( 50 )");		$this->add_field(logtab_stat, "INT");		$this->add_field(logtab_salt, "CHAR( 10 )");		$this->add_field(logtab_mail, "CHAR( 255 )");		$this->add_field(logtab_phone, "CHAR( 255 )");		$this->allfrees = new free($this->dbo);	}	function init_by_user($id) // pub	{ // все разделы		if($id && str_is_int($id))		{			$qwery = "SELECT * FROM " . LOGINTAB . " WHERE " . $this->keyfield . " = '$id';";			$this->select_id = $this->dbo->setquery($qwery);		}		else		{			return false;		}	}	function init_frees($uid, $pid) // pub	{ // все права		if(str_is_int($uid) && str_is_int($pid))		{			$this->init_by_user($uid);			$this->allfrees->setfrees($uid, $pid);		}		else		{			return false;		}	}// ------------ Функции ввода информации --------------------------	function delfrees($uid, $pid) // pub	{		$this->allfrees->del_up_frees($pid, $uid);	}	function deluser($uid) // pub	{		$step1 = $this->allfrees->delforuser($uid);		$step2 = $this->del($uid);		if($step2 && $step1) {return true;}		else {return false;}	}	function adduser($log, $pas) // pub	{ // Добавление пользователя с указанными log и pass		if( $this->isuser($log) ) { return false; }		$fields = logtab_log . ", " . logtab_pass . ", " . logtab_salt;		$salt = $this->generateSalt();		$pas = md5(md5($pas) . $salt);		$vals = "'$log', '$pas', '$salt'";		$qwery = "INSERT INTO " . LOGINTAB . " ( $fields ) VALUES ( $vals );";		$this->dbo->setquery($qwery);		return true; // При удаче возвращать id добавленного пользователя	}	function addfree($uid, $pid, $free)	{		$this->allfrees->addfree($uid, $free, $pid);	}	function save_nic($id, $val)	{		$fields = logtab_nic . " = '$val'";		$qwery = "UPDATE " . LOGINTAB . " SET $fields WHERE " . $this->keyfield . " = '$id' ;";		$this->dbo->setquery($qwery);	}	function save_stat($id, $val)	{		$fields = logtab_stat . " = '$val'";		$qwery = "UPDATE " . LOGINTAB . " SET $fields WHERE " . $this->keyfield . " = '$id' ;";		$this->dbo->setquery($qwery);	}	function save_pass($id, $val)	{		$salt = $this->generateSalt();		$pas = md5(md5($val) . $salt);		$fields = logtab_stat . " = '$pas', " . logtab_salt . " = '$salt'";		$qwery = "UPDATE " . LOGINTAB . " SET $fields WHERE " . $this->keyfield . " = '$id' ;";		$this->dbo->setquery($qwery);	}// ------------ Функции вывода информации --------------------------	function outleng()	{		return $this->outcount();	}	function outfreearray() // pub	{ // Масив набора прав		return $this->allfrees->out_part_frees();	}	private function checkpass() // priv	{ // Проверка пароля		// md5(md5($pass) . $salt)		for($i = 0; $i < $this->outcount(); ++$i)		{			$md5pass = $this->dbo->out($i, logtab_pass, $this->select_id);			$salt = $this->dbo->out($i, logtab_salt, $this->select_id);			$pass4check = md5(md5($this->pass) . $salt);			if($md5pass == $pass4check) {$this->querystring_id = $i; return true;}		}		return false;	}	private function inituser()	{ // Получение пользователя из БД		$qwery = "SELECT * FROM " . LOGINTAB . " WHERE " . logtab_log . " = '" . $this->log . "';";		$this->select_id = $this->dbo->setquery($qwery);		if( $this->checkpass() ) { return true; }		return false;	}/*	function setallusers() // pub	{ // Выбор всех пользователей для списка	$qwery = "SELECT * FROM " . LOGINTAB . "';";	$this->selectquery_id = $this->db_object->setquery($qwery);	$this->leng_users = $this->db_object->outcount($this->selectquery_id);	}*/	function setuser($log, $pass) // pub	{ // Установка пользователя		$this->log = $log;		$this->pass = $pass;		if ( $this->inituser() )		{			$this->erruser = false;			$this->userid = $this->dbo->out($this->querystring_id, $this->keyfield, $this->select_id);			$this->usernic = $this->dbo->out($this->querystring_id, logtab_nic, $this->select_id);			$this->userstat = $this->dbo->out($this->querystring_id, logtab_stat, $this->select_id);		}		else		{			if($this->log || $this->pass)			{				$this->setuser(0, 0);			}		}		if($this->log == "0") {$this->erruser = true;}	}	function setpart($partid)	{		$this->allfrees->setfrees($this->userid, $partid);	}/*	function logining() // ? // priv	{ // Создание сессии и регистрация переменных	if( !$this->islogin() ) {return false;}	session_start();	$_SESSION[SESS_login] = $this->log;	$_SESSION[SESS_pass] = $this->pass;	}*/// ------------ Функции ввода информации --------------------------// ------------ Функции вывода информации --------------------------	function islogin() // pub	{ // Успешна ли авторизация		if($this->erruser) { return false; }		return true;	}	function out_nic($id=0)	{		return $this->out(logtab_nic, $id);	}	function out_log($id=0)	{		return $this->out(logtab_log, $id);	}	function out_status($id=0)	{		return $this->out(logtab_stat, $id);	}	function out_stat() // pub	{ // функция-дублёр		return $this->out_status();	}	function out_part() // pub	{ // Раздел		return $this->allfrees->ret_part();	}	function is_logfree($free_i) // pub	{ // Наличие указанного права		if($this->userid)		{			return $this->allfrees->is_free($free_i);		}		return false;	}	function generateSalt() // priv	{		$salt = "";		$length = rand(5,10); // длина соли (от 5 до 10 сомволов)		for($i = 0; $i < $length; $i++)		{			$salt = $salt . chr( rand(33, 126) ); // символ из ASCII-table		}		return $salt;	}// ------------ Функции ввода информации --------------------------	function installfree() // pub	{		return $this->allfrees->install();	}// ------------ Функции вывода информации --------------------------	function isuser($log) // priv	{ // Наличие пользователя с указанным login-ом		// Для быстрой проверки при добавлении и т. д.		$qwery = "SELECT * FROM " . LOGINTAB . " WHERE " . logtab_log . " = '$log';";		$localid = $this->dbo->setquery($qwery);		if ( 0 < $this->dbo->outcount($localid) ) { return true; }		return false;	}	function is_uid($id) // pub	{ // Наличие пользователя с указанным id		// Для быстрой проверки при использовании в контексте		$qwery = "SELECT * FROM " . LOGINTAB . " WHERE " . $this->keyfield . " = '$id';";		$localid = $this->dbo->setquery($qwery);		if ( 0 < $this->dbo->outcount($localid) ) { return true; }		return false;	}	function is_free($free_i) // pub	{ // Наличие указанного права		return $this->allfrees->is_free($free_i);	}}?>