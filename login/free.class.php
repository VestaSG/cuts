<?phpclass free{	// priv	// смысловые переменные	var $user;	var $part;	var $idquery;	var $dbobject;	var $freesleng; // Длина массива имеющихся прав	// var $freearray;// ------------ Функции инициализации --------------------------	function free($dbo)	{ // Конструктор		$this->dbobject = $dbo;	}	function setfrees($uid, $part)	{		$this->user = $uid;		$this->part = $part;		$this->getfrees();	}	function getfrees() // priv	{ // Получение значений из базы данных		$qwery = "SELECT * FROM " . FREETAB . " WHERE " . freetab_user . " = '" . $this->user . "' AND " . freetab_part . " = '" . $this->part . "';";		$this->idquery = $this->dbobject->setquery($qwery);		$this->freesleng = $this->dbobject->outcount($this->idquery);	}// ------------ Функции ввода информации --------------------------	function install()	{ // Установка базы данных frees	// Сразу необходимо вносить информацию о нулевом пользователе (состояние неавторизован)		if( !$this->dbobject->istab(FREETAB) )		{			$create_query = "CREATE TABLE " . FREETAB . " (			" . freetab_id . " INT NOT NULL AUTO_INCREMENT ,			" . freetab_free . " INT ,			" . freetab_user . " INT ,			" . freetab_part . " INT ,			PRIMARY KEY ( " . freetab_id . " )			);";			return $this->dbobject->setquery($create_query); // Запрос создания таблицы в БД		}		return true;	}	function delforuser($uid)	{		$qwery = "DELETE FROM " . FREETAB . " WHERE " . freetab_user . " = '$uid';";		return $this->dbobject->setquery($qwery);	}	function delforpart($p)	{		$qwery = "DELETE FROM " . FREETAB . " WHERE " . freetab_part . " = '$p';";		return $this->dbobject->setquery($qwery);	}	function del_up_frees($p, $u)	{		$qwery = "DELETE FROM " . FREETAB . " WHERE " . freetab_user . " = '$u' AND " . freetab_part . " = '$p';";		return $this->dbobject->setquery($qwery);	}	function addfree($uid, $thefree, $p)	{		if( $this->is_the_free($uid, $thefree, $p) ) { return false; }// нет необходимости в предыдущей строчке, так как функция используется всегда// только после удаления всех прав данного пользователя в данном разделе		$fields = freetab_user . ", " . freetab_part . ", " . freetab_free;		$vals = "'$uid', '$p', '$thefree'";		$qwery = "INSERT INTO " . FREETAB . " ( $fields ) VALUES ( $vals );";		return $this->dbobject->setquery($qwery);	}// ------------ Функции вывода информации --------------------------	function is_the_free($uid, $thefree, $p) // priv	{ // Наличие права опред. пользователя и опред. раздела		// Для быстрой проверки при добавлении и т. д.		$qwery = "SELECT " . freetab_id . " FROM " . FREETAB . " WHERE " . freetab_user . " = '$uid' AND " . freetab_part . " = '$p' AND " . freetab_free . " = '$thefree';";		$localid = $this->dbobject->setquery($qwery);		if ( 0 < $this->dbobject->outcount($localid) ) { return true; }		return false;	}	function out_part_frees() // pub	{		// Возврат массива возможных прав в разделе (в зависимости от типа раздела)		// Массив вида $arr[$i]["name"]; $arr[$i]["val"]; $arr[$i]["is"]; $arr[$i]["title"]		// Если нет раздела, то нет и массива прав		if(!$this->part)		{return false;}/*		if($this->part == 1) // Специфично для раздела "редактор прав"		{			include(dirname(__FILE__)."/useradmin/free.conf.php");			return $uamfrees;		}*/		$locmobj = new menu($this->dbobject);		$locmobj->load($this->ret_part()); // echo($this->ret_part());		$dirmodul = $locmobj->outModulDir();		include($dirmodul . "/free.conf.php");		return $freeset;		// Получаем от него id модуля		// Идем в таблицу наборов прав для модулей		// Получаем массив прав для модуля	}	function ret_part() { return $this->part; }//	function ret_free() { return $this->freeid; }	function is_free($free_i) // Наличие указанного права	{		for($i = 0; $i < $this->freesleng; ++$i)		{			if ($this->dbobject->out($i, freetab_free, $this->idquery) == $free_i)			{ return true; }		}		return false;	}}?>